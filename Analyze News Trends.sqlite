 /* In this project, you will be working with a table named hacker_news that contains stories from Hacker News since its launch in 2007. 
It has the following columns:
- title: the title of the story
- user: the user who submitted the story
- score: the score of the story
- timestamp: the time of the story
- url: the link of the story */

/* the top 5 stories with the highest scores */
SELECT title, score
FROM hacker_news
ORDER BY score DESC
LIMIT 5;

/* total score of all the stories */
SELECT SUM(score)
FROM hacker_news;

/* users who have gotten combined scores of more than 200, and their combined scores */
SELECT user, SUM(score)
FROM hacker_news
GROUP BY user
HAVING SUM(score) > 200
ORDER BY 2 DESC;

/* add these users’ scores together and divide by the total to get the percentage */
SELECT (517 + 309 + 304 + 282) / 6366.0;

/* How many times has each user posted this link? */
SELECT user, COUNT(*)
FROM hacker_news
WHERE url LIKE '%watch?v=dQw4w9WgXcQ%'
GROUP BY 1
ORDER BY 2 DESC;

/* categorize each story based on their source; GitHub, Medium, or New York Times, 
Add a column for the number of stories from each URL, group by the case statement */
SELECT CASE
    WHEN url LIKE '%github.com%' THEN 'Github'
    WHEN url LIKE '%medium.com%' THEN 'Medium'
    WHEN url LIKE '%nytimes.com%' THEN 'New York Times'
    ELSE 'Other'
  END AS 'Source',
  COUNT(*)
FROM hacker_news
GROUP BY 1;

/* What’s the best time of the day to post a story */
SELECT timestamp
FROM hacker_news
LIMIT 5;
/* the format is: YYYY-MM-DD HH:MM:SS */
/* strftime(format, column) */
/* return the hour, HH, of the timestamp column */
SELECT timestamp, strftime('%H', timestamp)
FROM hacker_news
GROUP BY 1
LIMIT 10;

/* three columns: 
The hours of the timestamp
The average score for each hour
The count of stories for each hour */
SELECT strftime('%H', timestamp) AS 'Hour', ROUND(AVG(score), 1) AS 'Average Score', COUNT(*) AS '# of Stories'
FROM hacker_news
WHERE timestamp IS NOT NULL
GROUP BY 1
ORDER BY 2 DESC; 
